from airflow import DAG
from airflow.operators.bash import BashOperator
from datetime import datetime

with DAG('mydemodag',start_date=datetime(2023,1,31),
  schedule_interval='@daily',catchup=True) as dag:
  
  
  extract_a = BashOperator(
        task_id='extract_a',
        bash_command='sleep 10'
    )
	
  extract_b = BashOperator(
        task_id='extract_b',
        bash_command='sleep 10'
    )
	
	extract_a >> extract_b
	
=============================================>

from airflow import DAG
from airflow.operators.bash import BashOperator
 
from datetime import datetime
 
with DAG('parallel_dag', start_date=datetime(2022, 1, 1), 
    schedule_interval='@daily', catchup=False) as dag:
 
    extract_a = BashOperator(
        task_id='extract_a',
        bash_command='sleep 10'
    )
 
    extract_b = BashOperator(
        task_id='extract_b',
        bash_command='sleep 10'
    )
 
    load_a = BashOperator(
        task_id='load_a',
        bash_command='sleep 10'
    )
 
    load_b = BashOperator(
        task_id='load_b',
        bash_command='sleep 10'
    )
 
    transform = BashOperator(
        task_id='transform',
        bash_command='sleep 10'
    )
 
    extract_a >> load_a
    extract_b >> load_b
    [load_a, load_b] >> transform
	
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	
Python


from airflow import DAG
from airflow.operators.bash import BashOperator
from airflow.operators.python import PythonOperator
from airflow.operators.subdag import SubDagOperator
from airflow.utils.task_group import TaskGroup

from random import uniform
from datetime import datetime

default_args = {
    'start_date': datetime(2020, 1, 1)
}

def _training_model():
    accuracy = uniform(0.1, 10.0)
    print(f'model\'s accuracy: {accuracy}')

def _choose_best_model():
    print('choose best model')
	


with DAG('xcom_dag', schedule_interval='@daily', default_args=default_args, catchup=False) as dag:
      downloading_data = BashOperator(
        task_id='downloading_data',
        bash_command='sleep 3'
    )
	
	 training_model_b = PythonOperator(
            task_id='training_model_b',
            python_callable=_training_model
        )
		
	 choose_model = PythonOperator(
        task_id='task_4',
        python_callable=_choose_best_model
    )
	
